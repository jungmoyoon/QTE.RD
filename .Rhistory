?rd/qte
?rd.qte
devtools::load_all(".")
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rdq.band
?rd.qte
?rdq.band
?rdq.band
?rdq.band
?rdq.band
?rdq.band
?rdq.test
?rdq.test
?rdq.test
?rdq.bandwidth
?rdq.test
?rdq.bandwidth
?rdq.bandwidth
?rdq.bandwidth
?rdq.bandwidth
?rdq.bandwidth
devtools::load_all(".")
?rd.qte
?plot.qte
?plot.qte
?plot.qte
?plot.qte
?plot.condQ
?plot.condQ
?plot.condQ
?rd.qte
?rdq.band
?rdq.band
?rdq.band
devtools::load_all(".")
?rdq.test
?rdq.bandwidth
?rdq
?rdq
?rdq.bandwidth
?rdq.condf
?rdq
?rdq.bias
?rdq.bias
?rdq.bias
?rdq.sim
devtools::load_all(".")
?depa
?rdq
?rdq.sim
?rdq.sim
?make.band
?make.band
?make.band.cq
?make.band.cq
?plot.qte
?run.test
?run.test
?depa
?depa
?depa
?cv.bandwidth
?rd.qte
devtools::load_all(".")
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rdq.test
?rd.qte
?rdq.test
?rdq.test
?rdq.bandwidth
?plot.qte
?plot.condQ
?rdq
?rdq
?rdq
?rdq.condf
?rdq.condf
?rdq.bias
?rdq.sim
?make.band
?make.band
devtools::load_all(".")
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rd.qte
?rdq.band
?rdq.band
?rdq.band
?rdq.band
?rdq.test
?rdq.test
?rdq.test
?rdq.test
?rdq.test
?rdq.test
?rdq.test
?rdq.bandwidth
?rdq.bandwidth
?rdq.bandwidth
?rdq.bandwidth
?rdq.bandwidth
?rdq.bandwidth
?rdq.bandwidth
?rdq.bandwidth
?rdq
?rdq
?rdq
?rdq
?rdq
?rdq.test
?rdq.test
?rdq
?rdq
?rdq.condf
?rdq.condf
?rdq.bias
?rdq.bias
?rdq.bias
?rdq.sim
?rdq.sim
?rdq.sim
?rdq.sim
?make.band
?make.band
?make.band
?make.band
?make.band.cq
?make.band.cq
?make.band.cq
?make.band.cq
?make.band.cq
?run.test
?run.test
?make.band.cq
?run.test
?run.test
?run.test
?cv.bandwidth
?cv.bandwidth
?cv.bandwidth
?cv.bandwidth
?cv.bandwidth
?cv.bandwidth
?cv.bandwidth
?plot.qte
?plot.qte
?plot.condQ
?plot.condQ
?plot.qte
?plot.condQ
?plot.condQ
?depa
?depa
?make.band
?make.band
?rdq
devtools::load_all(".")
?rdq
?make.band
devtools::load_all(".")
?ㄱㅇ/ㅂㅅㄷ
?rd.qte
?make.band
?make.band
?make.band
?make.band
?make.band
?make.band
?make.band
?plot.condQ
?plot.condQ
devtools::load_all(".")
devtools::load_all(".")
?plot.qte
devtools::load_all(".")
?plot.qte
?plot.qte
library(QTE.RD)
plot.qte
rd.qte
plot.qte
run.test
?plot.qte
?plot.qte
devtools::load_all(".")
?plot.qte
devtools::load_all(".")
?rd.qte
?plot.qte
devtools::load_all(".")
?plot.qte
devtools::load_all(".")
?plot.qte
devtools::load_all(".")
devtools::load_all(".")
use_gpl_license()
use_mit_license()
use_gpl_license(version = 3, include_future = TRUE)
usethis::use_gpl_license(version = 3, include_future = TRUE)
devtools::load_all(".")
?plot.qte
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?rd/qte
?rd.qte
devtools::load_all(".")
?rd.qte
?rdq.band
?rdq.test
?rdq.test
?rdq.bandwidth
?rdq.bandwidth
?rdq.bandwidth
?rdq.bandwidth
?rdq.bandwidth
?rdq
?rdq.condf
?rdq.bias
?rdq.sim
?make.band
?make.band
?make.band
?make.band.cq
?make.band.cq
?run.test
?run.test
?cv.bandwidth
?plot.qte
?depa
devtools::load_all(".")
usethis::use_r(QTE.RD_package)
use_r(QTE.RD_package)
library(usethis)
use_r(QTE.RD_package)
?use_r
use_r(name=QTE.RD_package)
devtools::check(manual=TRUE)
devtools::check
devtools::check()
devtools::build_manual()
devtools::build_manual()
devtools::load_all(".")
library(devtools)
use_r("QTE.RD-package")
use_r("QTE.RD-package.R")
devtools::build_manual()
devtools::load_all(".")
?cv.bandwidth
?cv.bandwidth
?cv.bandwidth
?cv.bandwidth
?cv.bandwidth
?rd.qte
?rdq.band
?rdq.bandwidth
?rd/qte
?rd.qte
?rd.qte
?rdq
?rdq
?run.test
?run.test
devtools::build_manual()
?plot.qte
devtools::load_all(".")
?plot.qte
devtools::load_all(".")
?plot.qte
devtools::build_manual()
devtools::load_all(".")
?cv.bandwidth
?make.band
?make.band
?make.band.cq
?make.band.cq
?plot.qte
?rd.qte
?rd.qte
?rdq
?rd.qte
?rd.qte
?rdq.band
?rdq.bandwidth
?rdq.bias
?rdq.bias
?rdq.bias
?rdq.condf
?rdq.condf
?rdq.sim
?rdq.test
?rdq.test
?rdq.test
?rdq.test
?run.test
?rdq.test
?run.test
?run.test
?run.test
devtools::load_all(".")
library(devtools)
sethis::use_news_md
usethis::use_news_md
usethis::use_news_md()
rhub::check_for_cran()
library(rhub)
install.packages(rhub)
install.packages("rhub")
linrary(rhub)
library(rhub)
rhub::check_for_cran()
devtools::build_manual()
use_r(QTE.RD.R)
use_r("QTE.RD.R")
?`QTE.RD-package`
?QTE.RD
?`QTE.RD-package`
?`QTE.RD-package`
?QTE.RD-package
?QTE.RD-package
usethis::use_package_doc()
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
devtools::build_manual()
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
devtools::build_manual()
?`QTE.RD-package`
devtools::build_manual()
devtools::load_all(".")
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
devtools::build_manual()
?`QTE.RD-package`
devtools::build_manual()
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
?`QTE.RD-package`
devtools::build_manual()
usethis::use_news_md()
devtools::build_manual()
libary(goodpractice)
library(goodpractice)
install.packages("goodpractice")
library(goodpractice)
goodpractice::gp()
devtools::load_all(".")
?rd.qte
?rdq.band
library(devtools)
usethis::use_testthat()
devtools::test()
devtools::check()
devtools::load_all(".")
?rdq
devtools:check()
devtools:check()
devtools::check(
)
usethis::use_spell_check()
usethis::use_spell_check()
devtools::check()
rhub::check_for_cran()
devtools::check()
devtools::check()
usethis::use_cran_comments(open = rlang::is_interactive())
devtools::release()
spell_check()
devtools::release()
check_rhub()
install.packages(V8)
install.packages("V8")
check_rhub()
library(V8)
check_rhub()
devtools::check()
devtools::run_examples()
rhub::check_for_cran()
devtools::check_win_devel()
?rd.qte
?plot.qte
check_rhub()
?rd.qte
check_rhub()
devtools::release()
library(devtools)
devtools::install_deps()
devtools::install_deps
devtools::install_deps()
devtools::load_all(".")
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::load_all(".")
par()
par$mar
par$mar()
par$mfrow()
par$mfrow
par(no.readonly=T)
n = 500
x = runif(n,min=-4,max=4)
d = (x > 0)
y = x + 0.3*(x^2) - 0.1*(x^3) + 1.5*d + rnorm(n)
tlevel = seq(0.1,0.9,by=0.1)
A = rd.qte(y=y,x=x,d=d,x0=0,z0=NULL,tau=tlevel,bdw=2,cov=0,bias=1,cband=1,alpha=0.1)
plot.qte(A)
par()
y.text = "test scores"
m.text = "QTE and Uniform band"
plot.qte(A,ytext=y.text,mtext=m.text)
z = sample(c(0,1),n,replace=T)
y = x + 0.3*(x^2) - 0.1*(x^3) + 1.5*d + d*z + rnorm(n)
A = rd.qte(y=y,x=cbind(x,z),d=d,x0=0,z0=c(0,1),tau=tlevel,bdw=2,cov=1,bias=1,cband=1,alpha=0.1)
y.text = "test scores"
m.text = c("D=0","D=1")
plot.qte(A,ytext=y.text,mtext=m.text)
par()
n = 500
x = runif(n,min=-4,max=4)
d = (x > 0)
y = x + 0.3*(x^2) - 0.1*(x^3) + 1.5*d + rnorm(n)
tlevel = seq(0.1,0.9,by=0.1)
A = rd.qte(y=y,x=x,d=d,x0=0,z0=NULL,tau=tlevel,bdw=2,cov=0,bias=1,cband=1,alpha=0.1)
plot.qte(A,ptype=2)
y.text = "test scores"
m.text = "Conditional quantile functions"
sub.text = c("D=0 group","D=1 group")
plot.qte(A,ptype=2,ytext=y.text,mtext=m.text,subtext=sub.text)
par()
n = 500
x = runif(n,min=-4,max=4)
d = (x > 0)
y = x + 0.3*(x^2) - 0.1*(x^3) + 1.5*d + rnorm(n)
tlevel = seq(0.1,0.9,by=0.1)
A = rd.qte(y=y,x=x,d=d,x0=0,z0=NULL,tau=tlevel,bdw=2,cov=0,bias=1,cband=1,alpha=0.1)
plot.qte(A,ptype=2)
y.text = "test scores"
m.text = "Conditional quantile functions"
sub.text = c("D=0 group","D=1 group")
plot.qte(A,ptype=2,ytext=y.text,mtext=m.text,subtext=sub.text)
devtools::run_examples()
devtools::document()
revdepcheck::revdep_check()
devtools::spell_check()
devtools::check_win_devel()
devtools::submit_cran()
devtools::load_all(".")
library(devtools)
devtools::check(manual=TRUE)
evtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
linrary(rhub)
library(rhub)
rhub::check_for_cran()
devtools::build_manual()
devtools::build_manual()
rhub::check_for_cran()
devtools::submit_cran()
